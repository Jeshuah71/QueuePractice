import sys
from Queue import Queue

already_printed_error = False

def test(expected, given):
    """ Print the result of a test. """
    global already_printed_error
    if already_printed_error == False:
        linenum = sys._getframe(1).f_lineno # Get the callerâ€™s line number.
        if expected == given:
            print(f"Test at line {linenum} passed.")
            # print(msg)
        else:
            msg = ("\tTest at line {0} FAILED.".format(linenum))
            print(msg)
            print("\t\tExpected: "+ str(expected))
            print("\t\ttype: "+ str(type(expected)))
            print("\t\tGiven   : "+ str(given))
            print("\t\ttype: "+ str(type(given)))
            print("\t\tTester only prints a single error per section - there may be more")
            already_printed_error = True

def test_suite():
    """ Run the suite of tests for code in this module (this file).
    """
    global already_printed_error
    print("Starting tests - only failed tests print unless you change that")
    #Add your tests here
    print("Starting Queue tests...")
    # Create an empty Queue
    queue = Queue()

    # Test is_empty on a new queue
    test(True, queue.is_empty())

    # Test size on a new queue
    test(0, queue.size)

    # Test enqueue on an empty queue
    queue.enqueue(10)
    test(False, queue.is_empty())
    test(1, queue.size)
    test("[10]", str(queue))

    # Test enqueue multiple items
    queue.enqueue(20)
    queue.enqueue(30)
    test("[10, 20, 30]", str(queue))
    test(3, queue.size)

    # Test peek
    test(10, queue.peek())

    # Test dequeue
    test(10, queue.dequeue())
    test("[20, 30]", str(queue))
    test(20, queue.peek())
    test(2, queue.size)

    # Test dequeue all items
    test(20, queue.dequeue())
    test(30, queue.dequeue())
    test(True, queue.is_empty())
    test(0, queue.size)

    # Test dequeue on empty queue raises ValueError
    try:
        queue.dequeue()
    except ValueError as e:
        print("Test passed: Dequeueing from an empty queue raised ValueError.")
    else:
        print("Test FAILED: Dequeueing from an empty queue did not raise ValueError.")

    # Test peek on empty queue
    test(None, queue.peek())

    # Test enqueue and dequeue with mixed types
    queue.enqueue("hello")
    queue.enqueue("world")
    queue.enqueue(3.14)
    test("[hello, world, 3.14]", str(queue))
    test("hello", queue.dequeue())
    test("[world, 3.14]", str(queue))

    print("Ending Queue tests.")
# Run the test suite
if __name__ == "__main__":
    test_suite()
    #Dr B's tests follow:
    print('testing enqueue and __str__')
    already_printed_error = False
    x = Queue()
    x.enqueue('cornstarch')
    test("""[cornstarch]""", str(x))
    x.enqueue('octal')
    test("""[cornstarch, octal]""", str(x))
    x.enqueue('lung')
    test("""[cornstarch, octal, lung]""", str(x))
    x.enqueue('swastika')
    test("""[cornstarch, octal, lung, swastika]""", str(x))
    x.enqueue('OfficeMax')
    test("""[cornstarch, octal, lung, swastika, OfficeMax]""", str(x))
    x.enqueue('taskmistress')
    test("""[cornstarch, octal, lung, swastika, OfficeMax, taskmistress]""", str(x))
    x.enqueue('fertility')
    test("""[cornstarch, octal, lung, swastika, OfficeMax, taskmistress, fertility]""", str(x))
    x.enqueue('Fredric')
    test("""[cornstarch, octal, lung, swastika, OfficeMax, taskmistress, fertility, Fredric]""", str(x))
    x = Queue()
    x.enqueue('FYI')
    test("""[FYI]""", str(x))
    x.enqueue('slagged')
    test("""[FYI, slagged]""", str(x))
    x.enqueue('Adhara')
    test("""[FYI, slagged, Adhara]""", str(x))
    x.enqueue('emeritus')
    test("""[FYI, slagged, Adhara, emeritus]""", str(x))
    x.enqueue('overrate')
    test("""[FYI, slagged, Adhara, emeritus, overrate]""", str(x))
    x.enqueue('Condorcet')
    test("""[FYI, slagged, Adhara, emeritus, overrate, Condorcet]""", str(x))
    x = Queue()
    x.enqueue('foobar')
    test("""[foobar]""", str(x))
    x.enqueue('worshipful')
    test("""[foobar, worshipful]""", str(x))
    x.enqueue('ninny')
    test("""[foobar, worshipful, ninny]""", str(x))
    x.enqueue('Brandi')
    test("""[foobar, worshipful, ninny, Brandi]""", str(x))
    x.enqueue('worthlessness')
    test("""[foobar, worshipful, ninny, Brandi, worthlessness]""", str(x))
    x.enqueue('slippery')
    test("""[foobar, worshipful, ninny, Brandi, worthlessness, slippery]""", str(x))
    x = Queue()
    x.enqueue('rabid')
    test("""[rabid]""", str(x))
    x.enqueue('simultaneous')
    test("""[rabid, simultaneous]""", str(x))
    x.enqueue('lounger')
    test("""[rabid, simultaneous, lounger]""", str(x))
    x.enqueue('plat')
    test("""[rabid, simultaneous, lounger, plat]""", str(x))
    x.enqueue('tactic')
    test("""[rabid, simultaneous, lounger, plat, tactic]""", str(x))
    x = Queue()
    x.enqueue('southerner')
    test("""[southerner]""", str(x))
    x.enqueue('permanence')
    test("""[southerner, permanence]""", str(x))
    x.enqueue('Gregorio')
    test("""[southerner, permanence, Gregorio]""", str(x))
    x.enqueue('Pullman')
    test("""[southerner, permanence, Gregorio, Pullman]""", str(x))
    x.enqueue('Judd')
    test("""[southerner, permanence, Gregorio, Pullman, Judd]""", str(x))
    x.enqueue('ruched')
    test("""[southerner, permanence, Gregorio, Pullman, Judd, ruched]""", str(x))
    x.enqueue('lousiness')
    test("""[southerner, permanence, Gregorio, Pullman, Judd, ruched, lousiness]""", str(x))
    x.enqueue('lurid')
    test("""[southerner, permanence, Gregorio, Pullman, Judd, ruched, lousiness, lurid]""", str(x))
    x = Queue()
    x.enqueue('BITNET')
    test("""[BITNET]""", str(x))
    x.enqueue('braid')
    test("""[BITNET, braid]""", str(x))
    x.enqueue('Mancini')
    test("""[BITNET, braid, Mancini]""", str(x))
    x.enqueue('tastelessness')
    test("""[BITNET, braid, Mancini, tastelessness]""", str(x))
    x.enqueue('amplification')
    test("""[BITNET, braid, Mancini, tastelessness, amplification]""", str(x))
    x.enqueue('NH')
    test("""[BITNET, braid, Mancini, tastelessness, amplification, NH]""", str(x))
    x.enqueue('geniality')
    test("""[BITNET, braid, Mancini, tastelessness, amplification, NH, geniality]""", str(x))
    x.enqueue('democratic')
    test("""[BITNET, braid, Mancini, tastelessness, amplification, NH, geniality, democratic]""", str(x))
    x = Queue()
    x.enqueue('cesspit')
    test("""[cesspit]""", str(x))
    x.enqueue('chomp')
    test("""[cesspit, chomp]""", str(x))
    x.enqueue('Burgoyne')
    test("""[cesspit, chomp, Burgoyne]""", str(x))
    x.enqueue('augur')
    test("""[cesspit, chomp, Burgoyne, augur]""", str(x))
    x.enqueue('Beulah')
    test("""[cesspit, chomp, Burgoyne, augur, Beulah]""", str(x))
    x = Queue()
    x.enqueue('beggary')
    test("""[beggary]""", str(x))
    x.enqueue('Inez')
    test("""[beggary, Inez]""", str(x))
    x.enqueue('resiliency')
    test("""[beggary, Inez, resiliency]""", str(x))
    x.enqueue('mortality')
    test("""[beggary, Inez, resiliency, mortality]""", str(x))
    x.enqueue('harvest')
    test("""[beggary, Inez, resiliency, mortality, harvest]""", str(x))
    x.enqueue('Norway')
    test("""[beggary, Inez, resiliency, mortality, harvest, Norway]""", str(x))
    x.enqueue('cardie')
    test("""[beggary, Inez, resiliency, mortality, harvest, Norway, cardie]""", str(x))
    x = Queue()
    x.enqueue('seismologist')
    test("""[seismologist]""", str(x))
    x.enqueue('Uruguayan')
    test("""[seismologist, Uruguayan]""", str(x))
    x.enqueue('tramcar')
    test("""[seismologist, Uruguayan, tramcar]""", str(x))
    x.enqueue('harmful')
    test("""[seismologist, Uruguayan, tramcar, harmful]""", str(x))
    x.enqueue('subsequent')
    test("""[seismologist, Uruguayan, tramcar, harmful, subsequent]""", str(x))
    x.enqueue('stay')
    test("""[seismologist, Uruguayan, tramcar, harmful, subsequent, stay]""", str(x))
    x = Queue()
    x.enqueue('Augusta')
    test("""[Augusta]""", str(x))
    x.enqueue('trapezoidal')
    test("""[Augusta, trapezoidal]""", str(x))
    x.enqueue('transmitter')
    test("""[Augusta, trapezoidal, transmitter]""", str(x))
    x.enqueue('amass')
    test("""[Augusta, trapezoidal, transmitter, amass]""", str(x))
    x.enqueue('formulated')
    test("""[Augusta, trapezoidal, transmitter, amass, formulated]""", str(x))
    x.enqueue('bituminous')
    test("""[Augusta, trapezoidal, transmitter, amass, formulated, bituminous]""", str(x))
    x = Queue()
    x.enqueue('murmuring')
    test("""[murmuring]""", str(x))
    x.enqueue('viability')
    test("""[murmuring, viability]""", str(x))
    x.enqueue('developed')
    test("""[murmuring, viability, developed]""", str(x))
    x.enqueue('remitting')
    test("""[murmuring, viability, developed, remitting]""", str(x))
    x.enqueue('nuthouse')
    test("""[murmuring, viability, developed, remitting, nuthouse]""", str(x))
    x.enqueue('classicism')
    test("""[murmuring, viability, developed, remitting, nuthouse, classicism]""", str(x))
    x.enqueue('Californian')
    test("""[murmuring, viability, developed, remitting, nuthouse, classicism, Californian]""", str(x))
    x = Queue()
    x.enqueue('Kuznets')
    test("""[Kuznets]""", str(x))
    x.enqueue('copra')
    test("""[Kuznets, copra]""", str(x))
    x.enqueue('hardhearted')
    test("""[Kuznets, copra, hardhearted]""", str(x))
    x.enqueue('Jennifer')
    test("""[Kuznets, copra, hardhearted, Jennifer]""", str(x))
    x.enqueue('badlands')
    test("""[Kuznets, copra, hardhearted, Jennifer, badlands]""", str(x))
    x = Queue()
    x.enqueue('maintenance')
    test("""[maintenance]""", str(x))
    x.enqueue('Antwan')
    test("""[maintenance, Antwan]""", str(x))
    x.enqueue('trig')
    test("""[maintenance, Antwan, trig]""", str(x))
    x.enqueue('amorphousness')
    test("""[maintenance, Antwan, trig, amorphousness]""", str(x))
    x.enqueue('repletion')
    test("""[maintenance, Antwan, trig, amorphousness, repletion]""", str(x))
    x.enqueue('dissolve')
    test("""[maintenance, Antwan, trig, amorphousness, repletion, dissolve]""", str(x))
    x = Queue()
    x.enqueue('incestuousness')
    test("""[incestuousness]""", str(x))
    x.enqueue('agronomic')
    test("""[incestuousness, agronomic]""", str(x))
    x.enqueue('Pahlavi')
    test("""[incestuousness, agronomic, Pahlavi]""", str(x))
    x.enqueue('katydid')
    test("""[incestuousness, agronomic, Pahlavi, katydid]""", str(x))
    x.enqueue('overdo')
    test("""[incestuousness, agronomic, Pahlavi, katydid, overdo]""", str(x))
    x.enqueue('blood')
    test("""[incestuousness, agronomic, Pahlavi, katydid, overdo, blood]""", str(x))
    x.enqueue('febrile')
    test("""[incestuousness, agronomic, Pahlavi, katydid, overdo, blood, febrile]""", str(x))
    x = Queue()
    x.enqueue('powder')
    test("""[powder]""", str(x))
    x.enqueue('yourselves')
    test("""[powder, yourselves]""", str(x))
    x.enqueue('buckshot')
    test("""[powder, yourselves, buckshot]""", str(x))
    x.enqueue('Hooker')
    test("""[powder, yourselves, buckshot, Hooker]""", str(x))
    x.enqueue('CST')
    test("""[powder, yourselves, buckshot, Hooker, CST]""", str(x))
    x.enqueue('hieroglyphs')
    test("""[powder, yourselves, buckshot, Hooker, CST, hieroglyphs]""", str(x))
    x.enqueue('urgency')
    test("""[powder, yourselves, buckshot, Hooker, CST, hieroglyphs, urgency]""", str(x))
    x = Queue()
    x.enqueue('Swammerdam')
    test("""[Swammerdam]""", str(x))
    x.enqueue('Maryann')
    test("""[Swammerdam, Maryann]""", str(x))
    x.enqueue('Snoopy')
    test("""[Swammerdam, Maryann, Snoopy]""", str(x))
    x.enqueue('since')
    test("""[Swammerdam, Maryann, Snoopy, since]""", str(x))
    x.enqueue('pervert')
    test("""[Swammerdam, Maryann, Snoopy, since, pervert]""", str(x))
    x.enqueue('avoid')
    test("""[Swammerdam, Maryann, Snoopy, since, pervert, avoid]""", str(x))
    x.enqueue('Er')
    test("""[Swammerdam, Maryann, Snoopy, since, pervert, avoid, Er]""", str(x))
    x = Queue()
    x.enqueue('horrible')
    test("""[horrible]""", str(x))
    x.enqueue('union')
    test("""[horrible, union]""", str(x))
    x.enqueue('transfer')
    test("""[horrible, union, transfer]""", str(x))
    x.enqueue('jaywalk')
    test("""[horrible, union, transfer, jaywalk]""", str(x))
    x.enqueue('Nissan')
    test("""[horrible, union, transfer, jaywalk, Nissan]""", str(x))
    x.enqueue('Tamworth')
    test("""[horrible, union, transfer, jaywalk, Nissan, Tamworth]""", str(x))
    x.enqueue('preferably')
    test("""[horrible, union, transfer, jaywalk, Nissan, Tamworth, preferably]""", str(x))
    x.enqueue('Ishmael')
    test("""[horrible, union, transfer, jaywalk, Nissan, Tamworth, preferably, Ishmael]""", str(x))
    x = Queue()
    x.enqueue('Madagascan')
    test("""[Madagascan]""", str(x))
    x.enqueue('transmigration')
    test("""[Madagascan, transmigration]""", str(x))
    x.enqueue('Efren')
    test("""[Madagascan, transmigration, Efren]""", str(x))
    x.enqueue('davenport')
    test("""[Madagascan, transmigration, Efren, davenport]""", str(x))
    x.enqueue('calamity')
    test("""[Madagascan, transmigration, Efren, davenport, calamity]""", str(x))
    x.enqueue('deaves')
    test("""[Madagascan, transmigration, Efren, davenport, calamity, deaves]""", str(x))
    x.enqueue('Caucasoid')
    test("""[Madagascan, transmigration, Efren, davenport, calamity, deaves, Caucasoid]""", str(x))
    x.enqueue('cottar')
    test("""[Madagascan, transmigration, Efren, davenport, calamity, deaves, Caucasoid, cottar]""", str(x))
    x = Queue()
    x.enqueue('lumberman')
    test("""[lumberman]""", str(x))
    x.enqueue('bedsit')
    test("""[lumberman, bedsit]""", str(x))
    x.enqueue('Jenny')
    test("""[lumberman, bedsit, Jenny]""", str(x))
    x.enqueue('nudism')
    test("""[lumberman, bedsit, Jenny, nudism]""", str(x))
    x = Queue()
    x.enqueue('drown')
    test("""[drown]""", str(x))
    x.enqueue('Christchurch')
    test("""[drown, Christchurch]""", str(x))
    x.enqueue('oblivion')
    test("""[drown, Christchurch, oblivion]""", str(x))
    x.enqueue('divider')
    test("""[drown, Christchurch, oblivion, divider]""", str(x))
    x.enqueue('perjury')
    test("""[drown, Christchurch, oblivion, divider, perjury]""", str(x))
    x.enqueue('bracken')
    test("""[drown, Christchurch, oblivion, divider, perjury, bracken]""", str(x))
    x.enqueue('minority')
    test("""[drown, Christchurch, oblivion, divider, perjury, bracken, minority]""", str(x))
    print('testing dequeue')
    already_printed_error = False
    x = Queue()
    x.enqueue('prier')
    x.enqueue('globalism')
    x.enqueue('embryologist')
    x.enqueue('activation')
    x.enqueue('EU')
    x.enqueue('mummy')
    x.enqueue('Hart')
    test('prier', x.dequeue())
    test('globalism', x.dequeue())
    test('embryologist', x.dequeue())
    test('activation', x.dequeue())
    test('EU', x.dequeue())
    test('mummy', x.dequeue())
    test('Hart', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('Hawking')
    x.enqueue('flabbily')
    x.enqueue('stooge')
    x.enqueue('Marie')
    x.enqueue('pronominal')
    x.enqueue('trivia')
    x.enqueue('Jarrod')
    x.enqueue('doldrums')
    test('Hawking', x.dequeue())
    test('flabbily', x.dequeue())
    test('stooge', x.dequeue())
    test('Marie', x.dequeue())
    test('pronominal', x.dequeue())
    test('trivia', x.dequeue())
    test('Jarrod', x.dequeue())
    test('doldrums', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('Kalb')
    x.enqueue('horrendous')
    x.enqueue('gilt')
    x.enqueue('minifloppies')
    x.enqueue('cashier')
    x.enqueue('occurred')
    x.enqueue('weal')
    test('Kalb', x.dequeue())
    test('horrendous', x.dequeue())
    test('gilt', x.dequeue())
    test('minifloppies', x.dequeue())
    test('cashier', x.dequeue())
    test('occurred', x.dequeue())
    test('weal', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('subsidization')
    x.enqueue('sub')
    x.enqueue('attributed')
    x.enqueue('hasten')
    x.enqueue('meritocratic')
    x.enqueue('Himalaya')
    x.enqueue('sameness')
    test('subsidization', x.dequeue())
    test('sub', x.dequeue())
    test('attributed', x.dequeue())
    test('hasten', x.dequeue())
    test('meritocratic', x.dequeue())
    test('Himalaya', x.dequeue())
    test('sameness', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('Issac')
    x.enqueue('fibroid')
    x.enqueue('Sam')
    x.enqueue('overaggressive')
    x.enqueue('gourd')
    x.enqueue('Indonesian')
    x.enqueue('attachments')
    x.enqueue('summitry')
    test('Issac', x.dequeue())
    test('fibroid', x.dequeue())
    test('Sam', x.dequeue())
    test('overaggressive', x.dequeue())
    test('gourd', x.dequeue())
    test('Indonesian', x.dequeue())
    test('attachments', x.dequeue())
    test('summitry', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('presbytery')
    x.enqueue('dependence')
    x.enqueue('rutty')
    x.enqueue('embroiderer')
    x.enqueue('dower')
    x.enqueue('nonverbal')
    test('presbytery', x.dequeue())
    test('dependence', x.dequeue())
    test('rutty', x.dequeue())
    test('embroiderer', x.dequeue())
    test('dower', x.dequeue())
    test('nonverbal', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('counteroffer')
    x.enqueue('Che')
    x.enqueue('bestridden')
    x.enqueue('edit')
    x.enqueue('ACTH')
    x.enqueue('meld')
    x.enqueue('Eliza')
    x.enqueue('stateside')
    test('counteroffer', x.dequeue())
    test('Che', x.dequeue())
    test('bestridden', x.dequeue())
    test('edit', x.dequeue())
    test('ACTH', x.dequeue())
    test('meld', x.dequeue())
    test('Eliza', x.dequeue())
    test('stateside', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('swansong')
    x.enqueue('orthopedic')
    x.enqueue('ytterbium')
    x.enqueue('crinkle')
    x.enqueue('downtrend')
    x.enqueue('Bunyan')
    x.enqueue('Yukon')
    test('swansong', x.dequeue())
    test('orthopedic', x.dequeue())
    test('ytterbium', x.dequeue())
    test('crinkle', x.dequeue())
    test('downtrend', x.dequeue())
    test('Bunyan', x.dequeue())
    test('Yukon', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('energetic')
    x.enqueue('Gilead')
    x.enqueue('Malinowski')
    x.enqueue('optimism')
    x.enqueue('conservatoire')
    x.enqueue('sleeplessness')
    x.enqueue('camaraderie')
    x.enqueue('nosebleed')
    test('energetic', x.dequeue())
    test('Gilead', x.dequeue())
    test('Malinowski', x.dequeue())
    test('optimism', x.dequeue())
    test('conservatoire', x.dequeue())
    test('sleeplessness', x.dequeue())
    test('camaraderie', x.dequeue())
    test('nosebleed', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('paella')
    x.enqueue('panicking')
    x.enqueue('USB')
    x.enqueue('experimental')
    test('paella', x.dequeue())
    test('panicking', x.dequeue())
    test('USB', x.dequeue())
    test('experimental', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('steamfitting')
    x.enqueue('appearance')
    x.enqueue('transience')
    x.enqueue('dissonant')
    test('steamfitting', x.dequeue())
    test('appearance', x.dequeue())
    test('transience', x.dequeue())
    test('dissonant', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('cress')
    x.enqueue('Hindustani')
    x.enqueue('Sheol')
    x.enqueue('Rodrigo')
    x.enqueue('crackly')
    x.enqueue('testatrices')
    x.enqueue('tone')
    x.enqueue('concealed')
    test('cress', x.dequeue())
    test('Hindustani', x.dequeue())
    test('Sheol', x.dequeue())
    test('Rodrigo', x.dequeue())
    test('crackly', x.dequeue())
    test('testatrices', x.dequeue())
    test('tone', x.dequeue())
    test('concealed', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('whirlybird')
    x.enqueue('USPS')
    x.enqueue('zestfulness')
    x.enqueue('Adams')
    x.enqueue('illogicality')
    x.enqueue('christening')
    test('whirlybird', x.dequeue())
    test('USPS', x.dequeue())
    test('zestfulness', x.dequeue())
    test('Adams', x.dequeue())
    test('illogicality', x.dequeue())
    test('christening', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('resentfulness')
    x.enqueue('Hiss')
    x.enqueue('unessential')
    x.enqueue('colony')
    x.enqueue('sensitivity')
    x.enqueue('cheesecloth')
    x.enqueue('Clovis')
    test('resentfulness', x.dequeue())
    test('Hiss', x.dequeue())
    test('unessential', x.dequeue())
    test('colony', x.dequeue())
    test('sensitivity', x.dequeue())
    test('cheesecloth', x.dequeue())
    test('Clovis', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('Mejia')
    x.enqueue('mirthless')
    x.enqueue('iconography')
    x.enqueue('wheeze')
    test('Mejia', x.dequeue())
    test('mirthless', x.dequeue())
    test('iconography', x.dequeue())
    test('wheeze', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('whiny')
    x.enqueue('turntable')
    x.enqueue('vasomotor')
    x.enqueue('Puckett')
    x.enqueue('Middleton')
    x.enqueue('dumbstruck')
    test('whiny', x.dequeue())
    test('turntable', x.dequeue())
    test('vasomotor', x.dequeue())
    test('Puckett', x.dequeue())
    test('Middleton', x.dequeue())
    test('dumbstruck', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('Epicurean')
    x.enqueue('tragicomedy')
    x.enqueue('somnambulist')
    x.enqueue('tinnitus')
    x.enqueue('Jew')
    x.enqueue('labia')
    test('Epicurean', x.dequeue())
    test('tragicomedy', x.dequeue())
    test('somnambulist', x.dequeue())
    test('tinnitus', x.dequeue())
    test('Jew', x.dequeue())
    test('labia', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('sarge')
    x.enqueue('Leviticus')
    x.enqueue('tetra')
    x.enqueue('waterfront')
    test('sarge', x.dequeue())
    test('Leviticus', x.dequeue())
    test('tetra', x.dequeue())
    test('waterfront', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('transship')
    x.enqueue('cartilaginous')
    x.enqueue('helpmate')
    x.enqueue('Litton')
    x.enqueue('whitebait')
    x.enqueue('jinni')
    x.enqueue('musicianship')
    test('transship', x.dequeue())
    test('cartilaginous', x.dequeue())
    test('helpmate', x.dequeue())
    test('Litton', x.dequeue())
    test('whitebait', x.dequeue())
    test('jinni', x.dequeue())
    test('musicianship', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    x = Queue()
    x.enqueue('logistics')
    x.enqueue('modesty')
    x.enqueue('dropped')
    x.enqueue('lugged')
    test('logistics', x.dequeue())
    test('modesty', x.dequeue())
    test('dropped', x.dequeue())
    test('lugged', x.dequeue())
    try:
        x.dequeue()
        test(ValueError('ValueError'),'no error')
    except ValueError as err:
        test(True,True)
    print('testing enqueue, dequeue and __str__')
    already_printed_error = False
    x = Queue()
    x.enqueue('Layla')
    x.enqueue('papal')
    x.enqueue('Thunderbird')
    x.enqueue('raving')
    x.enqueue('doglegging')
    x.enqueue('seraphic')
    x.enqueue('motionless')
    x.enqueue('dicotyledonous')
    test("""[Layla, papal, Thunderbird, raving, doglegging, seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[papal, Thunderbird, raving, doglegging, seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[Thunderbird, raving, doglegging, seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[raving, doglegging, seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[doglegging, seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[seraphic, motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[motionless, dicotyledonous]""", str(x))
    x.dequeue()
    test("""[dicotyledonous]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('dunno')
    x.enqueue('sissy')
    x.enqueue('anon')
    x.enqueue('ordinariness')
    x.enqueue('conquerable')
    x.enqueue('ejaculate')
    test("""[dunno, sissy, anon, ordinariness, conquerable, ejaculate]""", str(x))
    x.dequeue()
    test("""[sissy, anon, ordinariness, conquerable, ejaculate]""", str(x))
    x.dequeue()
    test("""[anon, ordinariness, conquerable, ejaculate]""", str(x))
    x.dequeue()
    test("""[ordinariness, conquerable, ejaculate]""", str(x))
    x.dequeue()
    test("""[conquerable, ejaculate]""", str(x))
    x.dequeue()
    test("""[ejaculate]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('fishy')
    x.enqueue('underage')
    x.enqueue('styli')
    x.enqueue('sweatpants')
    x.enqueue('backseat')
    x.enqueue('McDaniel')
    x.enqueue('Elastoplast')
    test("""[fishy, underage, styli, sweatpants, backseat, McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[underage, styli, sweatpants, backseat, McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[styli, sweatpants, backseat, McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[sweatpants, backseat, McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[backseat, McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[McDaniel, Elastoplast]""", str(x))
    x.dequeue()
    test("""[Elastoplast]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('fasten')
    x.enqueue('fullness')
    x.enqueue('countervail')
    x.enqueue('fitly')
    test("""[fasten, fullness, countervail, fitly]""", str(x))
    x.dequeue()
    test("""[fullness, countervail, fitly]""", str(x))
    x.dequeue()
    test("""[countervail, fitly]""", str(x))
    x.dequeue()
    test("""[fitly]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('breathe')
    x.enqueue('dexterous')
    x.enqueue('Sampson')
    x.enqueue('implosive')
    test("""[breathe, dexterous, Sampson, implosive]""", str(x))
    x.dequeue()
    test("""[dexterous, Sampson, implosive]""", str(x))
    x.dequeue()
    test("""[Sampson, implosive]""", str(x))
    x.dequeue()
    test("""[implosive]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('conferrer')
    x.enqueue('proprietorial')
    x.enqueue('preparation')
    x.enqueue('pterodactyl')
    x.enqueue('Twain')
    test("""[conferrer, proprietorial, preparation, pterodactyl, Twain]""", str(x))
    x.dequeue()
    test("""[proprietorial, preparation, pterodactyl, Twain]""", str(x))
    x.dequeue()
    test("""[preparation, pterodactyl, Twain]""", str(x))
    x.dequeue()
    test("""[pterodactyl, Twain]""", str(x))
    x.dequeue()
    test("""[Twain]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('burliness')
    x.enqueue('fop')
    x.enqueue('bedded')
    x.enqueue('thumbtack')
    test("""[burliness, fop, bedded, thumbtack]""", str(x))
    x.dequeue()
    test("""[fop, bedded, thumbtack]""", str(x))
    x.dequeue()
    test("""[bedded, thumbtack]""", str(x))
    x.dequeue()
    test("""[thumbtack]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('hectare')
    x.enqueue('Breckenridge')
    x.enqueue('infinity')
    x.enqueue('squib')
    x.enqueue('respiratory')
    x.enqueue('Alkaid')
    test("""[hectare, Breckenridge, infinity, squib, respiratory, Alkaid]""", str(x))
    x.dequeue()
    test("""[Breckenridge, infinity, squib, respiratory, Alkaid]""", str(x))
    x.dequeue()
    test("""[infinity, squib, respiratory, Alkaid]""", str(x))
    x.dequeue()
    test("""[squib, respiratory, Alkaid]""", str(x))
    x.dequeue()
    test("""[respiratory, Alkaid]""", str(x))
    x.dequeue()
    test("""[Alkaid]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('schoolyard')
    x.enqueue('IRA')
    x.enqueue('goblin')
    x.enqueue('twitch')
    x.enqueue('garlicky')
    x.enqueue('political')
    x.enqueue('bogie')
    test("""[schoolyard, IRA, goblin, twitch, garlicky, political, bogie]""", str(x))
    x.dequeue()
    test("""[IRA, goblin, twitch, garlicky, political, bogie]""", str(x))
    x.dequeue()
    test("""[goblin, twitch, garlicky, political, bogie]""", str(x))
    x.dequeue()
    test("""[twitch, garlicky, political, bogie]""", str(x))
    x.dequeue()
    test("""[garlicky, political, bogie]""", str(x))
    x.dequeue()
    test("""[political, bogie]""", str(x))
    x.dequeue()
    test("""[bogie]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('refract')
    x.enqueue('mike')
    x.enqueue('engram')
    x.enqueue('stronghold')
    x.enqueue('enigma')
    x.enqueue('slushy')
    test("""[refract, mike, engram, stronghold, enigma, slushy]""", str(x))
    x.dequeue()
    test("""[mike, engram, stronghold, enigma, slushy]""", str(x))
    x.dequeue()
    test("""[engram, stronghold, enigma, slushy]""", str(x))
    x.dequeue()
    test("""[stronghold, enigma, slushy]""", str(x))
    x.dequeue()
    test("""[enigma, slushy]""", str(x))
    x.dequeue()
    test("""[slushy]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('footplate')
    x.enqueue('phonetically')
    x.enqueue('summon')
    x.enqueue('Anglicization')
    test("""[footplate, phonetically, summon, Anglicization]""", str(x))
    x.dequeue()
    test("""[phonetically, summon, Anglicization]""", str(x))
    x.dequeue()
    test("""[summon, Anglicization]""", str(x))
    x.dequeue()
    test("""[Anglicization]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('Beaufort')
    x.enqueue('Meier')
    x.enqueue('Hillel')
    x.enqueue('individuality')
    x.enqueue('ruckus')
    x.enqueue('logo')
    test("""[Beaufort, Meier, Hillel, individuality, ruckus, logo]""", str(x))
    x.dequeue()
    test("""[Meier, Hillel, individuality, ruckus, logo]""", str(x))
    x.dequeue()
    test("""[Hillel, individuality, ruckus, logo]""", str(x))
    x.dequeue()
    test("""[individuality, ruckus, logo]""", str(x))
    x.dequeue()
    test("""[ruckus, logo]""", str(x))
    x.dequeue()
    test("""[logo]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('puerile')
    x.enqueue('Tudor')
    x.enqueue('hike')
    x.enqueue('refutation')
    x.enqueue('fluster')
    test("""[puerile, Tudor, hike, refutation, fluster]""", str(x))
    x.dequeue()
    test("""[Tudor, hike, refutation, fluster]""", str(x))
    x.dequeue()
    test("""[hike, refutation, fluster]""", str(x))
    x.dequeue()
    test("""[refutation, fluster]""", str(x))
    x.dequeue()
    test("""[fluster]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('waveform')
    x.enqueue('Delmar')
    x.enqueue('prof')
    x.enqueue('invite')
    x.enqueue('Weiss')
    x.enqueue('moleskin')
    test("""[waveform, Delmar, prof, invite, Weiss, moleskin]""", str(x))
    x.dequeue()
    test("""[Delmar, prof, invite, Weiss, moleskin]""", str(x))
    x.dequeue()
    test("""[prof, invite, Weiss, moleskin]""", str(x))
    x.dequeue()
    test("""[invite, Weiss, moleskin]""", str(x))
    x.dequeue()
    test("""[Weiss, moleskin]""", str(x))
    x.dequeue()
    test("""[moleskin]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('stack')
    x.enqueue('masters')
    x.enqueue('nonsympathizer')
    x.enqueue('taxidermist')
    x.enqueue('macadamia')
    x.enqueue('regionalism')
    x.enqueue('Rasalgethi')
    test("""[stack, masters, nonsympathizer, taxidermist, macadamia, regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[masters, nonsympathizer, taxidermist, macadamia, regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[nonsympathizer, taxidermist, macadamia, regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[taxidermist, macadamia, regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[macadamia, regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[regionalism, Rasalgethi]""", str(x))
    x.dequeue()
    test("""[Rasalgethi]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('kindheartedness')
    x.enqueue('Thanh')
    x.enqueue('herd')
    x.enqueue('meaningless')
    x.enqueue('paratyphoid')
    x.enqueue('collection')
    test("""[kindheartedness, Thanh, herd, meaningless, paratyphoid, collection]""", str(x))
    x.dequeue()
    test("""[Thanh, herd, meaningless, paratyphoid, collection]""", str(x))
    x.dequeue()
    test("""[herd, meaningless, paratyphoid, collection]""", str(x))
    x.dequeue()
    test("""[meaningless, paratyphoid, collection]""", str(x))
    x.dequeue()
    test("""[paratyphoid, collection]""", str(x))
    x.dequeue()
    test("""[collection]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('prearrange')
    x.enqueue('elan')
    x.enqueue('upperclasswomen')
    x.enqueue('pebble')
    x.enqueue('eaglet')
    x.enqueue('grantsmanship')
    x.enqueue('molecular')
    x.enqueue('shamefulness')
    test("""[prearrange, elan, upperclasswomen, pebble, eaglet, grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[elan, upperclasswomen, pebble, eaglet, grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[upperclasswomen, pebble, eaglet, grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[pebble, eaglet, grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[eaglet, grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[grantsmanship, molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[molecular, shamefulness]""", str(x))
    x.dequeue()
    test("""[shamefulness]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('meanness')
    x.enqueue('numerous')
    x.enqueue('payer')
    x.enqueue('homestretch')
    x.enqueue('MIDI')
    test("""[meanness, numerous, payer, homestretch, MIDI]""", str(x))
    x.dequeue()
    test("""[numerous, payer, homestretch, MIDI]""", str(x))
    x.dequeue()
    test("""[payer, homestretch, MIDI]""", str(x))
    x.dequeue()
    test("""[homestretch, MIDI]""", str(x))
    x.dequeue()
    test("""[MIDI]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('Acevedo')
    x.enqueue('Zanzibar')
    x.enqueue('brownstone')
    x.enqueue('dicey')
    test("""[Acevedo, Zanzibar, brownstone, dicey]""", str(x))
    x.dequeue()
    test("""[Zanzibar, brownstone, dicey]""", str(x))
    x.dequeue()
    test("""[brownstone, dicey]""", str(x))
    x.dequeue()
    test("""[dicey]""", str(x))
    x.dequeue()
    test('[]', str(x))
    x = Queue()
    x.enqueue('ohmmeter')
    x.enqueue('pipette')
    x.enqueue('boorish')
    x.enqueue('hoarseness')
    test("""[ohmmeter, pipette, boorish, hoarseness]""", str(x))
    x.dequeue()
    test("""[pipette, boorish, hoarseness]""", str(x))
    x.dequeue()
    test("""[boorish, hoarseness]""", str(x))
    x.dequeue()
    test("""[hoarseness]""", str(x))
    x.dequeue()
    test('[]', str(x))
    print('testing is_empty')
    already_printed_error = False
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('choke')
    test(False, x.is_empty())
    x.enqueue('physiognomy')
    test(False, x.is_empty())
    x.enqueue('Frenchmen')
    test(False, x.is_empty())
    x.enqueue('unspeakably')
    test(False, x.is_empty())
    x.enqueue('sandbag')
    test(False, x.is_empty())
    x.enqueue('publish')
    test(False, x.is_empty())
    x.enqueue('countrywoman')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('cerium')
    test(False, x.is_empty())
    x.enqueue('ossify')
    test(False, x.is_empty())
    x.enqueue('DST')
    test(False, x.is_empty())
    x.enqueue('topless')
    test(False, x.is_empty())
    x.enqueue('tailpiece')
    test(False, x.is_empty())
    x.enqueue('galvanize')
    test(False, x.is_empty())
    x.enqueue('pneumatic')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('grunt')
    test(False, x.is_empty())
    x.enqueue('wallpaper')
    test(False, x.is_empty())
    x.enqueue('maternal')
    test(False, x.is_empty())
    x.enqueue('Cotonou')
    test(False, x.is_empty())
    x.enqueue('Bollywood')
    test(False, x.is_empty())
    x.enqueue('scented')
    test(False, x.is_empty())
    x.enqueue('extrusive')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('oration')
    test(False, x.is_empty())
    x.enqueue('reviser')
    test(False, x.is_empty())
    x.enqueue('obtrusiveness')
    test(False, x.is_empty())
    x.enqueue('shirtfront')
    test(False, x.is_empty())
    x.enqueue('panatella')
    test(False, x.is_empty())
    x.enqueue('upstream')
    test(False, x.is_empty())
    x.enqueue('acquisitiveness')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('uneconomic')
    test(False, x.is_empty())
    x.enqueue('judgeship')
    test(False, x.is_empty())
    x.enqueue('apparatus')
    test(False, x.is_empty())
    x.enqueue('flaccid')
    test(False, x.is_empty())
    x.enqueue('bigmouth')
    test(False, x.is_empty())
    x.enqueue('conceive')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('Gibraltar')
    test(False, x.is_empty())
    x.enqueue('embroider')
    test(False, x.is_empty())
    x.enqueue('dedication')
    test(False, x.is_empty())
    x.enqueue('satchel')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('Sonya')
    test(False, x.is_empty())
    x.enqueue('Oberlin')
    test(False, x.is_empty())
    x.enqueue('sue')
    test(False, x.is_empty())
    x.enqueue('Vito')
    test(False, x.is_empty())
    x.enqueue('nondetachable')
    test(False, x.is_empty())
    x.enqueue('Frankish')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('smooch')
    test(False, x.is_empty())
    x.enqueue('Bartok')
    test(False, x.is_empty())
    x.enqueue('Lance')
    test(False, x.is_empty())
    x.enqueue('course')
    test(False, x.is_empty())
    x.enqueue('Bradbury')
    test(False, x.is_empty())
    x.enqueue('corrosion')
    test(False, x.is_empty())
    x.enqueue('fading')
    test(False, x.is_empty())
    x.enqueue('shapes')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('privilege')
    test(False, x.is_empty())
    x.enqueue('telesales')
    test(False, x.is_empty())
    x.enqueue('protectionist')
    test(False, x.is_empty())
    x.enqueue('gull')
    test(False, x.is_empty())
    x.enqueue('Buick')
    test(False, x.is_empty())
    x.enqueue('core')
    test(False, x.is_empty())
    x.enqueue('cellulite')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('teleplay')
    test(False, x.is_empty())
    x.enqueue('Edinburgh')
    test(False, x.is_empty())
    x.enqueue('epidemic')
    test(False, x.is_empty())
    x.enqueue('stamper')
    test(False, x.is_empty())
    x.enqueue('limitlessness')
    test(False, x.is_empty())
    x.enqueue('concomitant')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('Moet')
    test(False, x.is_empty())
    x.enqueue('tailor')
    test(False, x.is_empty())
    x.enqueue('copped')
    test(False, x.is_empty())
    x.enqueue('notoriety')
    test(False, x.is_empty())
    x.enqueue('pestle')
    test(False, x.is_empty())
    x.enqueue('nightshade')
    test(False, x.is_empty())
    x.enqueue('heehaw')
    test(False, x.is_empty())
    x.enqueue('brutalize')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('getup')
    test(False, x.is_empty())
    x.enqueue('RAM')
    test(False, x.is_empty())
    x.enqueue('Praia')
    test(False, x.is_empty())
    x.enqueue('relay')
    test(False, x.is_empty())
    x.enqueue('radius')
    test(False, x.is_empty())
    x.enqueue('onerousness')
    test(False, x.is_empty())
    x.enqueue('dryer')
    test(False, x.is_empty())
    x.enqueue('Mildred')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('Ramirez')
    test(False, x.is_empty())
    x.enqueue('villa')
    test(False, x.is_empty())
    x.enqueue('roundworm')
    test(False, x.is_empty())
    x.enqueue('poetical')
    test(False, x.is_empty())
    x.enqueue('Ian')
    test(False, x.is_empty())
    x.enqueue('nonresistant')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('Semarang')
    test(False, x.is_empty())
    x.enqueue('Broadway')
    test(False, x.is_empty())
    x.enqueue('jellyfish')
    test(False, x.is_empty())
    x.enqueue('frill')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('medieval')
    test(False, x.is_empty())
    x.enqueue('psychotropic')
    test(False, x.is_empty())
    x.enqueue('ruminate')
    test(False, x.is_empty())
    x.enqueue('vodka')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('simper')
    test(False, x.is_empty())
    x.enqueue('Rosemary')
    test(False, x.is_empty())
    x.enqueue('Delacruz')
    test(False, x.is_empty())
    x.enqueue('pigged')
    test(False, x.is_empty())
    x.enqueue('banality')
    test(False, x.is_empty())
    x.enqueue('magnetic')
    test(False, x.is_empty())
    x.enqueue('assault')
    test(False, x.is_empty())
    x.enqueue('enticement')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('international')
    test(False, x.is_empty())
    x.enqueue('Salween')
    test(False, x.is_empty())
    x.enqueue('semimonthly')
    test(False, x.is_empty())
    x.enqueue('inveterate')
    test(False, x.is_empty())
    x.enqueue('frontiersmen')
    test(False, x.is_empty())
    x.enqueue('swordplay')
    test(False, x.is_empty())
    x.enqueue('endorse')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('quickstep')
    test(False, x.is_empty())
    x.enqueue('prime')
    test(False, x.is_empty())
    x.enqueue('streptomycin')
    test(False, x.is_empty())
    x.enqueue('anapestic')
    test(False, x.is_empty())
    x.enqueue('glad')
    test(False, x.is_empty())
    x.enqueue('axle')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('wrongheadedness')
    test(False, x.is_empty())
    x.enqueue('kookaburra')
    test(False, x.is_empty())
    x.enqueue('ploys')
    test(False, x.is_empty())
    x.enqueue('flaky')
    test(False, x.is_empty())
    x.enqueue('extraterritorial')
    test(False, x.is_empty())
    x.enqueue('congruity')
    test(False, x.is_empty())
    x.enqueue('Livia')
    test(False, x.is_empty())
    x.enqueue('tuppence')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    x = Queue()
    test(True, x.is_empty())
    x.enqueue('turbine')
    test(False, x.is_empty())
    x.enqueue('expeditionary')
    test(False, x.is_empty())
    x.enqueue('collagen')
    test(False, x.is_empty())
    x.enqueue('kw')
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(False, x.is_empty())
    x.dequeue()
    test(True, x.is_empty())
    print('testing peek')
    already_printed_error = False
    x = Queue()
    x.enqueue('ballerina')
    test('ballerina', x.peek())
    x.enqueue('Nepal')
    test('ballerina', x.peek())
    x.enqueue('croquette')
    test('ballerina', x.peek())
    x.enqueue('leathery')
    test('ballerina', x.peek())
    x.enqueue('Azana')
    test('ballerina', x.peek())
    x.dequeue()
    test('Nepal', x.peek())
    x.dequeue()
    test('croquette', x.peek())
    x.dequeue()
    test('leathery', x.peek())
    x.dequeue()
    test('Azana', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('shirttail')
    test('shirttail', x.peek())
    x.enqueue('c')
    test('shirttail', x.peek())
    x.enqueue('caddie')
    test('shirttail', x.peek())
    x.enqueue('metropolitan')
    test('shirttail', x.peek())
    x.enqueue('roll')
    test('shirttail', x.peek())
    x.dequeue()
    test('c', x.peek())
    x.dequeue()
    test('caddie', x.peek())
    x.dequeue()
    test('metropolitan', x.peek())
    x.dequeue()
    test('roll', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('unblushing')
    test('unblushing', x.peek())
    x.enqueue('Ferber')
    test('unblushing', x.peek())
    x.enqueue('undecided')
    test('unblushing', x.peek())
    x.enqueue('Raquel')
    test('unblushing', x.peek())
    x.enqueue('goad')
    test('unblushing', x.peek())
    x.enqueue('classiness')
    test('unblushing', x.peek())
    x.dequeue()
    test('Ferber', x.peek())
    x.dequeue()
    test('undecided', x.peek())
    x.dequeue()
    test('Raquel', x.peek())
    x.dequeue()
    test('goad', x.peek())
    x.dequeue()
    test('classiness', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Maldonado')
    test('Maldonado', x.peek())
    x.enqueue('Gen')
    test('Maldonado', x.peek())
    x.enqueue('wary')
    test('Maldonado', x.peek())
    x.enqueue('dexterity')
    test('Maldonado', x.peek())
    x.enqueue('Orlon')
    test('Maldonado', x.peek())
    x.enqueue('counterargument')
    test('Maldonado', x.peek())
    x.enqueue('Christendom')
    test('Maldonado', x.peek())
    x.dequeue()
    test('Gen', x.peek())
    x.dequeue()
    test('wary', x.peek())
    x.dequeue()
    test('dexterity', x.peek())
    x.dequeue()
    test('Orlon', x.peek())
    x.dequeue()
    test('counterargument', x.peek())
    x.dequeue()
    test('Christendom', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('outspokenness')
    test('outspokenness', x.peek())
    x.enqueue('mafioso')
    test('outspokenness', x.peek())
    x.enqueue('panderer')
    test('outspokenness', x.peek())
    x.enqueue('Paraguay')
    test('outspokenness', x.peek())
    x.dequeue()
    test('mafioso', x.peek())
    x.dequeue()
    test('panderer', x.peek())
    x.dequeue()
    test('Paraguay', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('secret')
    test('secret', x.peek())
    x.enqueue('paddock')
    test('secret', x.peek())
    x.enqueue('Myrdal')
    test('secret', x.peek())
    x.enqueue('Samoset')
    test('secret', x.peek())
    x.enqueue('whereon')
    test('secret', x.peek())
    x.enqueue('silversmiths')
    test('secret', x.peek())
    x.enqueue('phrase')
    test('secret', x.peek())
    x.enqueue('Peking')
    test('secret', x.peek())
    x.dequeue()
    test('paddock', x.peek())
    x.dequeue()
    test('Myrdal', x.peek())
    x.dequeue()
    test('Samoset', x.peek())
    x.dequeue()
    test('whereon', x.peek())
    x.dequeue()
    test('silversmiths', x.peek())
    x.dequeue()
    test('phrase', x.peek())
    x.dequeue()
    test('Peking', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('certifiable')
    test('certifiable', x.peek())
    x.enqueue('Mauritanian')
    test('certifiable', x.peek())
    x.enqueue('afield')
    test('certifiable', x.peek())
    x.enqueue('staph')
    test('certifiable', x.peek())
    x.enqueue('Oxycontin')
    test('certifiable', x.peek())
    x.enqueue('authorial')
    test('certifiable', x.peek())
    x.enqueue('martini')
    test('certifiable', x.peek())
    x.dequeue()
    test('Mauritanian', x.peek())
    x.dequeue()
    test('afield', x.peek())
    x.dequeue()
    test('staph', x.peek())
    x.dequeue()
    test('Oxycontin', x.peek())
    x.dequeue()
    test('authorial', x.peek())
    x.dequeue()
    test('martini', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('expose')
    test('expose', x.peek())
    x.enqueue('burnout')
    test('expose', x.peek())
    x.enqueue('Kiwanis')
    test('expose', x.peek())
    x.enqueue('Trollope')
    test('expose', x.peek())
    x.dequeue()
    test('burnout', x.peek())
    x.dequeue()
    test('Kiwanis', x.peek())
    x.dequeue()
    test('Trollope', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('mink')
    test('mink', x.peek())
    x.enqueue('molester')
    test('mink', x.peek())
    x.enqueue('travesty')
    test('mink', x.peek())
    x.enqueue('district')
    test('mink', x.peek())
    x.enqueue('pitiably')
    test('mink', x.peek())
    x.enqueue('valuable')
    test('mink', x.peek())
    x.enqueue('Meredith')
    test('mink', x.peek())
    x.dequeue()
    test('molester', x.peek())
    x.dequeue()
    test('travesty', x.peek())
    x.dequeue()
    test('district', x.peek())
    x.dequeue()
    test('pitiably', x.peek())
    x.dequeue()
    test('valuable', x.peek())
    x.dequeue()
    test('Meredith', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('votes')
    test('votes', x.peek())
    x.enqueue('teeing')
    test('votes', x.peek())
    x.enqueue('imitator')
    test('votes', x.peek())
    x.enqueue('interdependence')
    test('votes', x.peek())
    x.enqueue('jade')
    test('votes', x.peek())
    x.enqueue('hamstrung')
    test('votes', x.peek())
    x.enqueue('Heyerdahl')
    test('votes', x.peek())
    x.enqueue('acknowledge')
    test('votes', x.peek())
    x.dequeue()
    test('teeing', x.peek())
    x.dequeue()
    test('imitator', x.peek())
    x.dequeue()
    test('interdependence', x.peek())
    x.dequeue()
    test('jade', x.peek())
    x.dequeue()
    test('hamstrung', x.peek())
    x.dequeue()
    test('Heyerdahl', x.peek())
    x.dequeue()
    test('acknowledge', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Chaitanya')
    test('Chaitanya', x.peek())
    x.enqueue('cretinous')
    test('Chaitanya', x.peek())
    x.enqueue('Spears')
    test('Chaitanya', x.peek())
    x.enqueue('lavatory')
    test('Chaitanya', x.peek())
    x.dequeue()
    test('cretinous', x.peek())
    x.dequeue()
    test('Spears', x.peek())
    x.dequeue()
    test('lavatory', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('cookery')
    test('cookery', x.peek())
    x.enqueue('soppy')
    test('cookery', x.peek())
    x.enqueue('oldness')
    test('cookery', x.peek())
    x.enqueue('tautological')
    test('cookery', x.peek())
    x.dequeue()
    test('soppy', x.peek())
    x.dequeue()
    test('oldness', x.peek())
    x.dequeue()
    test('tautological', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Olympian')
    test('Olympian', x.peek())
    x.enqueue('Anshan')
    test('Olympian', x.peek())
    x.enqueue('NWT')
    test('Olympian', x.peek())
    x.enqueue('grist')
    test('Olympian', x.peek())
    x.enqueue('generational')
    test('Olympian', x.peek())
    x.enqueue('diploma')
    test('Olympian', x.peek())
    x.enqueue('amoebic')
    test('Olympian', x.peek())
    x.dequeue()
    test('Anshan', x.peek())
    x.dequeue()
    test('NWT', x.peek())
    x.dequeue()
    test('grist', x.peek())
    x.dequeue()
    test('generational', x.peek())
    x.dequeue()
    test('diploma', x.peek())
    x.dequeue()
    test('amoebic', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('stewardship')
    test('stewardship', x.peek())
    x.enqueue('patchouli')
    test('stewardship', x.peek())
    x.enqueue('escalation')
    test('stewardship', x.peek())
    x.enqueue('seventeenths')
    test('stewardship', x.peek())
    x.enqueue('sexism')
    test('stewardship', x.peek())
    x.dequeue()
    test('patchouli', x.peek())
    x.dequeue()
    test('escalation', x.peek())
    x.dequeue()
    test('seventeenths', x.peek())
    x.dequeue()
    test('sexism', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Tannhauser')
    test('Tannhauser', x.peek())
    x.enqueue('merchantmen')
    test('Tannhauser', x.peek())
    x.enqueue('flan')
    test('Tannhauser', x.peek())
    x.enqueue('tobacconist')
    test('Tannhauser', x.peek())
    x.enqueue('Smuts')
    test('Tannhauser', x.peek())
    x.dequeue()
    test('merchantmen', x.peek())
    x.dequeue()
    test('flan', x.peek())
    x.dequeue()
    test('tobacconist', x.peek())
    x.dequeue()
    test('Smuts', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Higgins')
    test('Higgins', x.peek())
    x.enqueue('stonily')
    test('Higgins', x.peek())
    x.enqueue('valetudinarianism')
    test('Higgins', x.peek())
    x.enqueue('eradicable')
    test('Higgins', x.peek())
    x.dequeue()
    test('stonily', x.peek())
    x.dequeue()
    test('valetudinarianism', x.peek())
    x.dequeue()
    test('eradicable', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('tickle')
    test('tickle', x.peek())
    x.enqueue('Tia')
    test('tickle', x.peek())
    x.enqueue('fraudster')
    test('tickle', x.peek())
    x.enqueue('causticity')
    test('tickle', x.peek())
    x.enqueue('fidgety')
    test('tickle', x.peek())
    x.enqueue('unsporting')
    test('tickle', x.peek())
    x.enqueue('overcautious')
    test('tickle', x.peek())
    x.enqueue('theme')
    test('tickle', x.peek())
    x.dequeue()
    test('Tia', x.peek())
    x.dequeue()
    test('fraudster', x.peek())
    x.dequeue()
    test('causticity', x.peek())
    x.dequeue()
    test('fidgety', x.peek())
    x.dequeue()
    test('unsporting', x.peek())
    x.dequeue()
    test('overcautious', x.peek())
    x.dequeue()
    test('theme', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('sunbonnet')
    test('sunbonnet', x.peek())
    x.enqueue('deliberate')
    test('sunbonnet', x.peek())
    x.enqueue('eighths')
    test('sunbonnet', x.peek())
    x.enqueue('activate')
    test('sunbonnet', x.peek())
    x.enqueue('maple')
    test('sunbonnet', x.peek())
    x.enqueue('glen')
    test('sunbonnet', x.peek())
    x.enqueue('Oran')
    test('sunbonnet', x.peek())
    x.enqueue('forehead')
    test('sunbonnet', x.peek())
    x.dequeue()
    test('deliberate', x.peek())
    x.dequeue()
    test('eighths', x.peek())
    x.dequeue()
    test('activate', x.peek())
    x.dequeue()
    test('maple', x.peek())
    x.dequeue()
    test('glen', x.peek())
    x.dequeue()
    test('Oran', x.peek())
    x.dequeue()
    test('forehead', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('Right')
    test('Right', x.peek())
    x.enqueue('Livingston')
    test('Right', x.peek())
    x.enqueue('brand')
    test('Right', x.peek())
    x.enqueue('lessee')
    test('Right', x.peek())
    x.enqueue('helpfulness')
    test('Right', x.peek())
    x.enqueue('capillarity')
    test('Right', x.peek())
    x.dequeue()
    test('Livingston', x.peek())
    x.dequeue()
    test('brand', x.peek())
    x.dequeue()
    test('lessee', x.peek())
    x.dequeue()
    test('helpfulness', x.peek())
    x.dequeue()
    test('capillarity', x.peek())
    x.dequeue()
    test(None, x.peek())
    x = Queue()
    x.enqueue('misfile')
    test('misfile', x.peek())
    x.enqueue('sponger')
    test('misfile', x.peek())
    x.enqueue('deterrence')
    test('misfile', x.peek())
    x.enqueue('snowiness')
    test('misfile', x.peek())
    x.enqueue('lollop')
    test('misfile', x.peek())
    x.enqueue('transposition')
    test('misfile', x.peek())
    x.enqueue('Kinshasa')
    test('misfile', x.peek())
    x.dequeue()
    test('sponger', x.peek())
    x.dequeue()
    test('deterrence', x.peek())
    x.dequeue()
    test('snowiness', x.peek())
    x.dequeue()
    test('lollop', x.peek())
    x.dequeue()
    test('transposition', x.peek())
    x.dequeue()
    test('Kinshasa', x.peek())
    x.dequeue()
    test(None, x.peek())
    print('testing size')
    already_printed_error = False
    x = Queue()
    test(0, x.size())
    x.enqueue('Avis')
    test(1, x.size())
    x.enqueue('astronautics')
    test(2, x.size())
    x.enqueue('wallboard')
    test(3, x.size())
    x.enqueue('partnership')
    test(4, x.size())
    x.enqueue('warden')
    test(5, x.size())
    x.enqueue('myopic')
    test(6, x.size())
    x.enqueue('quarterdeck')
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('ideological')
    test(1, x.size())
    x.enqueue('doctrine')
    test(2, x.size())
    x.enqueue('handwriting')
    test(3, x.size())
    x.enqueue('Bauhaus')
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('Sibyl')
    test(1, x.size())
    x.enqueue('Fannie')
    test(2, x.size())
    x.enqueue('picnicked')
    test(3, x.size())
    x.enqueue('epee')
    test(4, x.size())
    x.enqueue('overtire')
    test(5, x.size())
    x.enqueue('incense')
    test(6, x.size())
    x.enqueue('entrepreneurship')
    test(7, x.size())
    x.enqueue('meritorious')
    test(8, x.size())
    x.dequeue()
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('amenability')
    test(1, x.size())
    x.enqueue('moreover')
    test(2, x.size())
    x.enqueue('maddening')
    test(3, x.size())
    x.enqueue('hemlock')
    test(4, x.size())
    x.enqueue('instance')
    test(5, x.size())
    x.enqueue('Cyrillic')
    test(6, x.size())
    x.enqueue('parimutuel')
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('jobbing')
    test(1, x.size())
    x.enqueue('weir')
    test(2, x.size())
    x.enqueue('plainclothesman')
    test(3, x.size())
    x.enqueue('Charity')
    test(4, x.size())
    x.enqueue('Canadian')
    test(5, x.size())
    x.enqueue('strobe')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('Munoz')
    test(1, x.size())
    x.enqueue('Mountie')
    test(2, x.size())
    x.enqueue('Nunki')
    test(3, x.size())
    x.enqueue('cosmetician')
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('nonplussing')
    test(1, x.size())
    x.enqueue('Banach')
    test(2, x.size())
    x.enqueue('Rocco')
    test(3, x.size())
    x.enqueue('cadaverous')
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('savage')
    test(1, x.size())
    x.enqueue('paddy')
    test(2, x.size())
    x.enqueue('ostensibly')
    test(3, x.size())
    x.enqueue('armaments')
    test(4, x.size())
    x.enqueue('dreadnought')
    test(5, x.size())
    x.enqueue('steelworks')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('ran')
    test(1, x.size())
    x.enqueue('benedictine')
    test(2, x.size())
    x.enqueue('phi')
    test(3, x.size())
    x.enqueue('lethargy')
    test(4, x.size())
    x.enqueue('Moroccan')
    test(5, x.size())
    x.enqueue('applicable')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('politburo')
    test(1, x.size())
    x.enqueue('creditor')
    test(2, x.size())
    x.enqueue('outdo')
    test(3, x.size())
    x.enqueue('bewhiskered')
    test(4, x.size())
    x.enqueue('Ellesmere')
    test(5, x.size())
    x.enqueue('malachite')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('postmen')
    test(1, x.size())
    x.enqueue('implement')
    test(2, x.size())
    x.enqueue('callow')
    test(3, x.size())
    x.enqueue('Juno')
    test(4, x.size())
    x.enqueue('hubcap')
    test(5, x.size())
    x.enqueue('shelter')
    test(6, x.size())
    x.enqueue('watchful')
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('sup')
    test(1, x.size())
    x.enqueue('misfeasance')
    test(2, x.size())
    x.enqueue('amplify')
    test(3, x.size())
    x.enqueue('analogize')
    test(4, x.size())
    x.enqueue('Hippocratic')
    test(5, x.size())
    x.enqueue('acetate')
    test(6, x.size())
    x.enqueue('oust')
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('Bergman')
    test(1, x.size())
    x.enqueue('retain')
    test(2, x.size())
    x.enqueue('temperateness')
    test(3, x.size())
    x.enqueue('Lindsey')
    test(4, x.size())
    x.enqueue('landowner')
    test(5, x.size())
    x.enqueue('scraggly')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('gyroscope')
    test(1, x.size())
    x.enqueue('west')
    test(2, x.size())
    x.enqueue('Communist')
    test(3, x.size())
    x.enqueue('datatype')
    test(4, x.size())
    x.enqueue('Archie')
    test(5, x.size())
    x.enqueue('toccata')
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('abortion')
    test(1, x.size())
    x.enqueue('gunnery')
    test(2, x.size())
    x.enqueue('crosier')
    test(3, x.size())
    x.enqueue('downscale')
    test(4, x.size())
    x.enqueue('replant')
    test(5, x.size())
    x.enqueue('annotate')
    test(6, x.size())
    x.enqueue('hurdling')
    test(7, x.size())
    x.enqueue('spume')
    test(8, x.size())
    x.dequeue()
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('moisturize')
    test(1, x.size())
    x.enqueue('Chretien')
    test(2, x.size())
    x.enqueue('sendoff')
    test(3, x.size())
    x.enqueue('potentate')
    test(4, x.size())
    x.enqueue('satisfying')
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('chimeric')
    test(1, x.size())
    x.enqueue('noxious')
    test(2, x.size())
    x.enqueue('Chinatown')
    test(3, x.size())
    x.enqueue('readily')
    test(4, x.size())
    x.enqueue('freemasonry')
    test(5, x.size())
    x.enqueue('dramatically')
    test(6, x.size())
    x.enqueue('ballistic')
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('transistor')
    test(1, x.size())
    x.enqueue('Adriatic')
    test(2, x.size())
    x.enqueue('wad')
    test(3, x.size())
    x.enqueue('innocent')
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('charmer')
    test(1, x.size())
    x.enqueue('tempest')
    test(2, x.size())
    x.enqueue('vainglory')
    test(3, x.size())
    x.enqueue('fortieths')
    test(4, x.size())
    x.enqueue('stripy')
    test(5, x.size())
    x.enqueue('salacious')
    test(6, x.size())
    x.enqueue('menhaden')
    test(7, x.size())
    x.enqueue('sportswear')
    test(8, x.size())
    x.dequeue()
    test(7, x.size())
    x.dequeue()
    test(6, x.size())
    x.dequeue()
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())
    x = Queue()
    test(0, x.size())
    x.enqueue('Erewhon')
    test(1, x.size())
    x.enqueue('Lidia')
    test(2, x.size())
    x.enqueue('divest')
    test(3, x.size())
    x.enqueue('arbitrary')
    test(4, x.size())
    x.enqueue('hornless')
    test(5, x.size())
    x.dequeue()
    test(4, x.size())
    x.dequeue()
    test(3, x.size())
    x.dequeue()
    test(2, x.size())
    x.dequeue()
    test(1, x.size())
    x.dequeue()
    test(0, x.size())


    print("Ending tests")

    test_suite()